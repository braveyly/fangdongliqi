package com.tvt.fdlq.domain;

import java.util.ArrayList;
import java.util.List;

public class BuildingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table building
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table building
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table building
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public BuildingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table building
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table building
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {
            addCriterion("pid is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("pid is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(Integer value) {
            addCriterion("pid =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(Integer value) {
            addCriterion("pid <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(Integer value) {
            addCriterion("pid >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(Integer value) {
            addCriterion("pid >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(Integer value) {
            addCriterion("pid <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(Integer value) {
            addCriterion("pid <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<Integer> values) {
            addCriterion("pid in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<Integer> values) {
            addCriterion("pid not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(Integer value1, Integer value2) {
            addCriterion("pid between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(Integer value1, Integer value2) {
            addCriterion("pid not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andFloornumIsNull() {
            addCriterion("floorNum is null");
            return (Criteria) this;
        }

        public Criteria andFloornumIsNotNull() {
            addCriterion("floorNum is not null");
            return (Criteria) this;
        }

        public Criteria andFloornumEqualTo(Integer value) {
            addCriterion("floorNum =", value, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumNotEqualTo(Integer value) {
            addCriterion("floorNum <>", value, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumGreaterThan(Integer value) {
            addCriterion("floorNum >", value, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumGreaterThanOrEqualTo(Integer value) {
            addCriterion("floorNum >=", value, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumLessThan(Integer value) {
            addCriterion("floorNum <", value, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumLessThanOrEqualTo(Integer value) {
            addCriterion("floorNum <=", value, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumIn(List<Integer> values) {
            addCriterion("floorNum in", values, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumNotIn(List<Integer> values) {
            addCriterion("floorNum not in", values, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumBetween(Integer value1, Integer value2) {
            addCriterion("floorNum between", value1, value2, "floornum");
            return (Criteria) this;
        }

        public Criteria andFloornumNotBetween(Integer value1, Integer value2) {
            addCriterion("floorNum not between", value1, value2, "floornum");
            return (Criteria) this;
        }

        public Criteria andRoomnpfIsNull() {
            addCriterion("roomNPF is null");
            return (Criteria) this;
        }

        public Criteria andRoomnpfIsNotNull() {
            addCriterion("roomNPF is not null");
            return (Criteria) this;
        }

        public Criteria andRoomnpfEqualTo(Integer value) {
            addCriterion("roomNPF =", value, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfNotEqualTo(Integer value) {
            addCriterion("roomNPF <>", value, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfGreaterThan(Integer value) {
            addCriterion("roomNPF >", value, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfGreaterThanOrEqualTo(Integer value) {
            addCriterion("roomNPF >=", value, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfLessThan(Integer value) {
            addCriterion("roomNPF <", value, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfLessThanOrEqualTo(Integer value) {
            addCriterion("roomNPF <=", value, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfIn(List<Integer> values) {
            addCriterion("roomNPF in", values, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfNotIn(List<Integer> values) {
            addCriterion("roomNPF not in", values, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfBetween(Integer value1, Integer value2) {
            addCriterion("roomNPF between", value1, value2, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andRoomnpfNotBetween(Integer value1, Integer value2) {
            addCriterion("roomNPF not between", value1, value2, "roomnpf");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andPublicfacIsNull() {
            addCriterion("publicFac is null");
            return (Criteria) this;
        }

        public Criteria andPublicfacIsNotNull() {
            addCriterion("publicFac is not null");
            return (Criteria) this;
        }

        public Criteria andPublicfacEqualTo(String value) {
            addCriterion("publicFac =", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacNotEqualTo(String value) {
            addCriterion("publicFac <>", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacGreaterThan(String value) {
            addCriterion("publicFac >", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacGreaterThanOrEqualTo(String value) {
            addCriterion("publicFac >=", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacLessThan(String value) {
            addCriterion("publicFac <", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacLessThanOrEqualTo(String value) {
            addCriterion("publicFac <=", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacLike(String value) {
            addCriterion("publicFac like", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacNotLike(String value) {
            addCriterion("publicFac not like", value, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacIn(List<String> values) {
            addCriterion("publicFac in", values, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacNotIn(List<String> values) {
            addCriterion("publicFac not in", values, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacBetween(String value1, String value2) {
            addCriterion("publicFac between", value1, value2, "publicfac");
            return (Criteria) this;
        }

        public Criteria andPublicfacNotBetween(String value1, String value2) {
            addCriterion("publicFac not between", value1, value2, "publicfac");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table building
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table building
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}